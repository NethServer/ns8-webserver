#!/usr/bin/env python3
#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#
import os
import sys
import json
import agent
import urllib.request
import urllib.error
import ssl


# retrieve json data
data = json.load(sys.stdin)
path=data['path']

# set error validation
agent.set_weight(os.path.basename(__file__), 0)

# if we have the same path, lets go further
if path == os.environ.get('TRAEFIK_PATH',"") or path == os.environ.get('TRAEFIK_PATH',"") + '/':
    sys.exit(0)



# do not verify the certificate
ctx = ssl.create_default_context()
ctx.check_hostname = False
ctx.verify_mode = ssl.CERT_NONE

# try to connect, 404 is an expected error that we have to manage in exeption
try:
    conn = urllib.request.urlopen('http://localhost'+path,context=ctx)
except urllib.error.HTTPError as e:
    # no path -> ok
    if e.code == 404:
        sys.exit(0)
else:
    # path exists -> nok
    agent.set_status('validation-failed')
    json.dump([{'field':'path','parameter':'path','value':path,'error':'webpath_already_used_in_traefik'}],fp=sys.stdout)
    sys.exit(2)
