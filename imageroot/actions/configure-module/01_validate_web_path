#!/usr/bin/env python3
#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#
import os
import sys
import json
import agent
import requests
import urllib3

# retrieve json data
data = json.load(sys.stdin)
path=data['path']

# remove warnings on self signed certificate 
urllib3.disable_warnings()

# set error validation
agent.set_weight(os.path.basename(__file__), 0)
agent.set_weight("01_validate_web_path", 0)

# if we have the same path, lets go further
if path == os.environ['TRAEFIK_PATH']:
    sys.exit(0)

# test on 80 with a possible redirection to 443
response = requests.get('http://localhost'+path,verify=False)

if response.status_code == 404:
    # no path -> ok
    sys.exit(0)
# test 443 because 80 is prohibited (no redirection)
elif response.status_code == 403:
    # test on 443
    response = requests.get('https://localhost'+path, verify=False)
    if response.status_code == 404:
        # no path -> ok
        sys.exit(0)
    else:
        # we have found a path -> error
        agent.set_status('validation-failed')
        json.dump([{'field':'path','parameter':'path','value':path,'error':'webpath_already_used_in_traefik'}],fp=sys.stdout)
        sys.exit(2)
else:
    # we have found a path -> error
    agent.set_status('validation-failed')
    json.dump([{'field':'path','parameter':'path','value':path,'error':'webpath_already_used_in_traefik'}],fp=sys.stdout)
    sys.exit(2)
