#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import os
import glob
import configparser
import json
import sys
import agent
import agent.tasks

# Find default traefik instance for current node
default_traefik_id = agent.resolve_agent_id('traefik@node')
if default_traefik_id is None:
    sys.exit(2)

for file in glob.iglob("databases/vhosts/*.ini"):
    config = configparser.ConfigParser()
    config.read(file)
    ServerNames = config['vhost']['ServerNames'].split(',')
    http2https = True if config['vhost']['http2https'] == 'enabled' else False
    lets_encrypt = True if config['vhost']['lets_encrypt'] == 'enabled' else False
    for host in ServerNames:
        # Configure traefik virtual host
        response = agent.tasks.run(
            agent_id=default_traefik_id,
            action='set-route',
            data={
                'instance': os.environ['MODULE_ID']+ '-' + host,
                'url': f'http://127.0.0.1:{os.environ["NGINX_TCP_PORT"]}',
                'host': host,
                'lets_encrypt': lets_encrypt,
                'http2https': http2https
            },
        )

        # Check if traefik configuration has been successfull
        agent.assert_exp(response['exit_code'] == 0)

path = os.environ['TRAEFIK_PATH']
http2https = os.environ['TRAEFIK_HTTP2HTTPS']
if type(http2https) == str:
     http2https = True if http2https.lower()  == "true" else False

# Configure traefik virtual host
response = agent.tasks.run(
    agent_id=default_traefik_id,
    action='set-route',
    data={
        'instance': os.environ['MODULE_ID'],
        'url': f'http://127.0.0.1:{os.environ["SFTPGO_TCP_PORT"]}',
        'path': path,
        'http2https': http2https
    },
)

# Check if traefik configuration has been successfull
agent.assert_exp(response['exit_code'] == 0)
